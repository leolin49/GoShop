// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v5.29.3
// source: stock.proto

package stockpb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Stock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     uint32                 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	Count         uint64                 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stock) Reset() {
	*x = Stock{}
	mi := &file_stock_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stock) ProtoMessage() {}

func (x *Stock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stock.ProtoReflect.Descriptor instead.
func (*Stock) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{0}
}

func (x *Stock) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *Stock) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReqGetStock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     uint32                 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqGetStock) Reset() {
	*x = ReqGetStock{}
	mi := &file_stock_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqGetStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqGetStock) ProtoMessage() {}

func (x *ReqGetStock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqGetStock.ProtoReflect.Descriptor instead.
func (*ReqGetStock) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{1}
}

func (x *ReqGetStock) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

type RspGetStock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Count         uint64                 `protobuf:"varint,1,opt,name=count,proto3" json:"count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RspGetStock) Reset() {
	*x = RspGetStock{}
	mi := &file_stock_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RspGetStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspGetStock) ProtoMessage() {}

func (x *RspGetStock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspGetStock.ProtoReflect.Descriptor instead.
func (*RspGetStock) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{2}
}

func (x *RspGetStock) GetCount() uint64 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReqAddStock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stocks        []*Stock               `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAddStock) Reset() {
	*x = ReqAddStock{}
	mi := &file_stock_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAddStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAddStock) ProtoMessage() {}

func (x *ReqAddStock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAddStock.ProtoReflect.Descriptor instead.
func (*ReqAddStock) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{3}
}

func (x *ReqAddStock) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

type RspAddStock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RspAddStock) Reset() {
	*x = RspAddStock{}
	mi := &file_stock_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RspAddStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspAddStock) ProtoMessage() {}

func (x *RspAddStock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspAddStock.ProtoReflect.Descriptor instead.
func (*RspAddStock) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{4}
}

func (x *RspAddStock) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type ReqSubStock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Stocks        []*Stock               `protobuf:"bytes,1,rep,name=stocks,proto3" json:"stocks,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqSubStock) Reset() {
	*x = ReqSubStock{}
	mi := &file_stock_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqSubStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqSubStock) ProtoMessage() {}

func (x *ReqSubStock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqSubStock.ProtoReflect.Descriptor instead.
func (*ReqSubStock) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{5}
}

func (x *ReqSubStock) GetStocks() []*Stock {
	if x != nil {
		return x.Stocks
	}
	return nil
}

type RspSubStock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RspSubStock) Reset() {
	*x = RspSubStock{}
	mi := &file_stock_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RspSubStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspSubStock) ProtoMessage() {}

func (x *RspSubStock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspSubStock.ProtoReflect.Descriptor instead.
func (*RspSubStock) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{6}
}

func (x *RspSubStock) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type ReqFlashStock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProductId     uint32                 `protobuf:"varint,1,opt,name=product_id,json=productId,proto3" json:"product_id,omitempty"`
	SubCount      uint64                 `protobuf:"varint,2,opt,name=sub_count,json=subCount,proto3" json:"sub_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqFlashStock) Reset() {
	*x = ReqFlashStock{}
	mi := &file_stock_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqFlashStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFlashStock) ProtoMessage() {}

func (x *ReqFlashStock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFlashStock.ProtoReflect.Descriptor instead.
func (*ReqFlashStock) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{7}
}

func (x *ReqFlashStock) GetProductId() uint32 {
	if x != nil {
		return x.ProductId
	}
	return 0
}

func (x *ReqFlashStock) GetSubCount() uint64 {
	if x != nil {
		return x.SubCount
	}
	return 0
}

type RspFlashStock struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RspFlashStock) Reset() {
	*x = RspFlashStock{}
	mi := &file_stock_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RspFlashStock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspFlashStock) ProtoMessage() {}

func (x *RspFlashStock) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspFlashStock.ProtoReflect.Descriptor instead.
func (*RspFlashStock) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{8}
}

func (x *RspFlashStock) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type ReqFlashCacheWarmUp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqFlashCacheWarmUp) Reset() {
	*x = ReqFlashCacheWarmUp{}
	mi := &file_stock_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqFlashCacheWarmUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFlashCacheWarmUp) ProtoMessage() {}

func (x *ReqFlashCacheWarmUp) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFlashCacheWarmUp.ProtoReflect.Descriptor instead.
func (*ReqFlashCacheWarmUp) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{9}
}

type RspFlashCacheWarmUp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RspFlashCacheWarmUp) Reset() {
	*x = RspFlashCacheWarmUp{}
	mi := &file_stock_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RspFlashCacheWarmUp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspFlashCacheWarmUp) ProtoMessage() {}

func (x *RspFlashCacheWarmUp) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspFlashCacheWarmUp.ProtoReflect.Descriptor instead.
func (*RspFlashCacheWarmUp) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{10}
}

func (x *RspFlashCacheWarmUp) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

type ReqFlashCacheClear struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqFlashCacheClear) Reset() {
	*x = ReqFlashCacheClear{}
	mi := &file_stock_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqFlashCacheClear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqFlashCacheClear) ProtoMessage() {}

func (x *ReqFlashCacheClear) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqFlashCacheClear.ProtoReflect.Descriptor instead.
func (*ReqFlashCacheClear) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{11}
}

type RspFlashCacheClear struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ErrorCode     int32                  `protobuf:"varint,1,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RspFlashCacheClear) Reset() {
	*x = RspFlashCacheClear{}
	mi := &file_stock_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RspFlashCacheClear) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RspFlashCacheClear) ProtoMessage() {}

func (x *RspFlashCacheClear) ProtoReflect() protoreflect.Message {
	mi := &file_stock_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RspFlashCacheClear.ProtoReflect.Descriptor instead.
func (*RspFlashCacheClear) Descriptor() ([]byte, []int) {
	return file_stock_proto_rawDescGZIP(), []int{12}
}

func (x *RspFlashCacheClear) GetErrorCode() int32 {
	if x != nil {
		return x.ErrorCode
	}
	return 0
}

var File_stock_proto protoreflect.FileDescriptor

var file_stock_proto_rawDesc = string([]byte{
	0x0a, 0x0b, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x73,
	0x74, 0x6f, 0x63, 0x6b, 0x22, 0x3c, 0x0a, 0x05, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x2c, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64,
	0x22, 0x23, 0x0a, 0x0b, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x41, 0x64, 0x64, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x53, 0x74, 0x6f,
	0x63, 0x6b, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x2c, 0x0a, 0x0b, 0x52, 0x73,
	0x70, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x33, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x53,
	0x75, 0x62, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x24, 0x0a, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x73, 0x22, 0x2c, 0x0a,
	0x0b, 0x52, 0x73, 0x70, 0x53, 0x75, 0x62, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x4b, 0x0a, 0x0d, 0x52,
	0x65, 0x71, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a,
	0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x09, 0x70, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73,
	0x75, 0x62, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x2e, 0x0a, 0x0d, 0x52, 0x73, 0x70, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72,
	0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x15, 0x0a, 0x13, 0x52, 0x65, 0x71, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x57, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x22,
	0x34, 0x0a, 0x13, 0x52, 0x73, 0x70, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65,
	0x57, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x33, 0x0a, 0x12, 0x52,
	0x73, 0x70, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6c, 0x65, 0x61,
	0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x43, 0x6f, 0x64, 0x65,
	0x32, 0x85, 0x03, 0x0a, 0x0c, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x12, 0x34, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x71, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x73, 0x70, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x34, 0x0a, 0x08, 0x41, 0x64, 0x64, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x71, 0x41,
	0x64, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x52, 0x73, 0x70, 0x41, 0x64, 0x64, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12, 0x34, 0x0a,
	0x08, 0x53, 0x75, 0x62, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x12, 0x2e, 0x73, 0x74, 0x6f, 0x63,
	0x6b, 0x2e, 0x52, 0x65, 0x71, 0x53, 0x75, 0x62, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x12, 0x2e,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x73, 0x70, 0x53, 0x75, 0x62, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0a, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x12, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x61,
	0x73, 0x68, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x1a, 0x14, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e,
	0x52, 0x73, 0x70, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x22, 0x00, 0x12,
	0x4c, 0x0a, 0x10, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x57, 0x61, 0x72,
	0x6d, 0x55, 0x70, 0x12, 0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x71, 0x46,
	0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x57, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x1a,
	0x1a, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x73, 0x70, 0x46, 0x6c, 0x61, 0x73, 0x68,
	0x43, 0x61, 0x63, 0x68, 0x65, 0x57, 0x61, 0x72, 0x6d, 0x55, 0x70, 0x22, 0x00, 0x12, 0x49, 0x0a,
	0x0f, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72,
	0x12, 0x19, 0x2e, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x65, 0x71, 0x46, 0x6c, 0x61, 0x73,
	0x68, 0x43, 0x61, 0x63, 0x68, 0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x1a, 0x19, 0x2e, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x2e, 0x52, 0x73, 0x70, 0x46, 0x6c, 0x61, 0x73, 0x68, 0x43, 0x61, 0x63, 0x68,
	0x65, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x22, 0x00, 0x42, 0x23, 0x5a, 0x21, 0x67, 0x6f, 0x73, 0x68,
	0x6f, 0x70, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x73, 0x74, 0x6f, 0x63, 0x6b, 0x3b, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_stock_proto_rawDescOnce sync.Once
	file_stock_proto_rawDescData []byte
)

func file_stock_proto_rawDescGZIP() []byte {
	file_stock_proto_rawDescOnce.Do(func() {
		file_stock_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_stock_proto_rawDesc), len(file_stock_proto_rawDesc)))
	})
	return file_stock_proto_rawDescData
}

var file_stock_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_stock_proto_goTypes = []any{
	(*Stock)(nil),               // 0: stock.Stock
	(*ReqGetStock)(nil),         // 1: stock.ReqGetStock
	(*RspGetStock)(nil),         // 2: stock.RspGetStock
	(*ReqAddStock)(nil),         // 3: stock.ReqAddStock
	(*RspAddStock)(nil),         // 4: stock.RspAddStock
	(*ReqSubStock)(nil),         // 5: stock.ReqSubStock
	(*RspSubStock)(nil),         // 6: stock.RspSubStock
	(*ReqFlashStock)(nil),       // 7: stock.ReqFlashStock
	(*RspFlashStock)(nil),       // 8: stock.RspFlashStock
	(*ReqFlashCacheWarmUp)(nil), // 9: stock.ReqFlashCacheWarmUp
	(*RspFlashCacheWarmUp)(nil), // 10: stock.RspFlashCacheWarmUp
	(*ReqFlashCacheClear)(nil),  // 11: stock.ReqFlashCacheClear
	(*RspFlashCacheClear)(nil),  // 12: stock.RspFlashCacheClear
}
var file_stock_proto_depIdxs = []int32{
	0,  // 0: stock.ReqAddStock.stocks:type_name -> stock.Stock
	0,  // 1: stock.ReqSubStock.stocks:type_name -> stock.Stock
	1,  // 2: stock.StockService.GetStock:input_type -> stock.ReqGetStock
	3,  // 3: stock.StockService.AddStock:input_type -> stock.ReqAddStock
	5,  // 4: stock.StockService.SubStock:input_type -> stock.ReqSubStock
	7,  // 5: stock.StockService.FlashStock:input_type -> stock.ReqFlashStock
	9,  // 6: stock.StockService.FlashCacheWarmUp:input_type -> stock.ReqFlashCacheWarmUp
	11, // 7: stock.StockService.FlashCacheClear:input_type -> stock.ReqFlashCacheClear
	2,  // 8: stock.StockService.GetStock:output_type -> stock.RspGetStock
	4,  // 9: stock.StockService.AddStock:output_type -> stock.RspAddStock
	6,  // 10: stock.StockService.SubStock:output_type -> stock.RspSubStock
	8,  // 11: stock.StockService.FlashStock:output_type -> stock.RspFlashStock
	10, // 12: stock.StockService.FlashCacheWarmUp:output_type -> stock.RspFlashCacheWarmUp
	12, // 13: stock.StockService.FlashCacheClear:output_type -> stock.RspFlashCacheClear
	8,  // [8:14] is the sub-list for method output_type
	2,  // [2:8] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_stock_proto_init() }
func file_stock_proto_init() {
	if File_stock_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_stock_proto_rawDesc), len(file_stock_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_stock_proto_goTypes,
		DependencyIndexes: file_stock_proto_depIdxs,
		MessageInfos:      file_stock_proto_msgTypes,
	}.Build()
	File_stock_proto = out.File
	file_stock_proto_goTypes = nil
	file_stock_proto_depIdxs = nil
}
